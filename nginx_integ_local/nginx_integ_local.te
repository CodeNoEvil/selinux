policy_module(nginx_integ_local, 1.0.4)

# Author: Jani Heinonen / Profit Consulting Oy
# #         email: jani.heinonen@profitconsulting.fi
# #         phone: +358 50 313 4292
#

########################################
#
# requires
#

require {
    type NGINX_t;
    type NGINX_etc_rw_t;
    type NGINX_var_t;
    type NGINX_exec_t;
    type NGINX_usr_t;
    type etc_t;
    type fs_t;
    type http_port_t;
    type http_cache_port_t;
    type initrc_t;
    type locale_t;
    type initrc_var_run_t;
    type node_t;
    type port_t;
    type proc_t;
    type sysctl_kernel_t;
    type urandom_device_t;
    type usr_t;
    type var_run_t;
    type var_t;
    type anon_inodefs_t;
    type cert_t;
    type net_conf_t;
    class dir { read search open getattr add_name remove_name };
    class file { unlink read getattr open write create };
    class filesystem getattr;
    class tcp_socket { listen ioctl create connect name_bind getopt getattr accept setopt shutdown node_bind name_connect };
    class udp_socket { ioctl create connect };
    class capability { setuid net_bind_service setgid sys_resource };
    class process { setrlimit signal };
    class chr_file { read getattr open };
    class lnk_file read;
}


########################################
#
# Declarations
#

type NGINX_t;
type NGINX_exec_t;
init_daemon_domain(NGINX_t, NGINX_exec_t)

permissive NGINX_t;

type NGINX_initrc_exec_t;
init_script_file(NGINX_initrc_exec_t)

type NGINX_etc_rw_t;
files_type(NGINX_etc_rw_t)

type NGINX_log_t;
logging_log_file(NGINX_log_t)

type NGINX_var_t;
files_type(NGINX_var_t)

type NGINX_usr_t;
files_type(NGINX_usr_t)

########################################
#
# NGINX local policy
#

manage_dirs_pattern(NGINX_t, NGINX_etc_rw_t, NGINX_etc_rw_t)
manage_files_pattern(NGINX_t, NGINX_etc_rw_t, NGINX_etc_rw_t)
files_etc_filetrans(NGINX_t, NGINX_etc_rw_t, { dir file })

manage_dirs_pattern(NGINX_t, NGINX_log_t, NGINX_log_t)
manage_files_pattern(NGINX_t, NGINX_log_t, NGINX_log_t)
logging_log_filetrans(NGINX_t, NGINX_log_t, { dir file })

manage_dirs_pattern(NGINX_t, NGINX_var_t, NGINX_var_t)
manage_files_pattern(NGINX_t, NGINX_var_t, NGINX_var_t)
files_var_filetrans(NGINX_t, NGINX_var_t, { dir file })

manage_dirs_pattern(NGINX_t, NGINX_usr_t, NGINX_usr_t)
manage_files_pattern(NGINX_t, NGINX_usr_t, NGINX_usr_t)
files_usr_filetrans(NGINX_t, NGINX_usr_t, { dir file })

allow NGINX_t NGINX_exec_t:file { execute_no_trans };
allow NGINX_t etc_t:file { read getattr open };
allow NGINX_t fs_t:filesystem getattr;
allow NGINX_t http_port_t:tcp_socket name_bind;
allow NGINX_t initrc_t:tcp_socket { getopt getattr accept setopt shutdown };
allow NGINX_t initrc_var_run_t:file { read write open };
allow NGINX_t locale_t:file { read getattr open };
allow NGINX_t node_t:tcp_socket node_bind;
allow NGINX_t port_t:tcp_socket name_connect;
allow NGINX_t proc_t:file { read open };
allow NGINX_t self:capability { chown setuid net_bind_service setgid sys_resource dac_override };
allow NGINX_t self:process { setrlimit signal };
allow NGINX_t self:tcp_socket { getattr listen accept shutdown ioctl setopt getopt bind create connect };
allow NGINX_t self:udp_socket { ioctl create connect };
allow NGINX_t sysctl_kernel_t:dir search;
allow NGINX_t sysctl_kernel_t:file read;
allow NGINX_t urandom_device_t:chr_file { read getattr open };
allow NGINX_t usr_t:file { read getattr open };
allow NGINX_t usr_t:lnk_file read;
allow NGINX_t var_run_t:dir { write add_name remove_name };
allow NGINX_t var_run_t:file { rename read write create open unlink };
allow NGINX_t anon_inodefs_t:file ioctl;
allow NGINX_t cert_t:dir search;
allow NGINX_t cert_t:file { read getattr open };
allow NGINX_t var_t:dir { create setattr };
allow NGINX_t net_conf_t:file { read getattr open };
allow NGINX_t http_cache_port_t:tcp_socket name_connect;
